# config.py - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ Yandex Cloud Functions

import os

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ä–µ–¥—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
IS_CLOUD_FUNCTIONS = bool(os.environ.get('_HANDLER'))  # –í Cloud Functions –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å _HANDLER

if not IS_CLOUD_FUNCTIONS:
    # –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ - –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å .env
    try:
        from dotenv import load_dotenv
        load_dotenv()
        print("‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞: .env —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω")
    except ImportError:
        print("‚ö†Ô∏è  python-dotenv –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ")
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env: {e}")
else:
    print("‚úÖ Cloud Functions: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)
TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN') or os.environ.get('TELEGRAM_BOT')
if not TOKEN:
    available_vars = [k for k in os.environ.keys() if 'BOT' in k or 'TELEGRAM' in k]
    print(f"‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å BOT/TELEGRAM: {available_vars}")
    raise ValueError("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ YDB
YDB_ENDPOINT = os.environ.get('YDB_ENDPOINT') or os.environ.get('YDB_ENDPOIN')  # –ù–∞ —Å–ª—É—á–∞–π –æ–ø–µ—á–∞—Ç–∫–∏
YDB_DATABASE = os.environ.get('YDB_DATABASE') or os.environ.get('YDB_DATABAS')  # –ù–∞ —Å–ª—É—á–∞–π –æ–ø–µ—á–∞—Ç–∫–∏
YDB_SERVICE_ACCOUNT_KEY = os.environ.get('YDB_SERVICE_ACCOUNT_KEY')  # JSON –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞ –¥–ª—è Cloud Functions
YDB_KEY_FILE = os.environ.get('YDB_KEY_FILE')  # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

# –ü—Ä–æ–≤–µ—Ä—è–µ–º YDB –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
if not YDB_ENDPOINT or not YDB_DATABASE:
    available_ydb_vars = [k for k in os.environ.keys() if 'YDB' in k]
    print(f"‚ö†Ô∏è  YDB –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {available_ydb_vars}")
    if IS_CLOUD_FUNCTIONS:
        print("‚ùå –í Cloud Functions YDB –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!")
        raise ValueError("‚ùå YDB –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    else:
        print("‚ö†Ô∏è  YDB –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ - –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

# –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
admin_users_str = os.environ.get('ADMIN_USERS', '398232017,1014841100')
try:
    ADMINS = [int(user_id.strip()) for user_id in admin_users_str.split(',') if user_id.strip()]
    print(f"‚úÖ –ê–¥–º–∏–Ω—ã: {len(ADMINS)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
except Exception as e:
    print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ ADMIN_USERS: {e}")
    ADMINS = [398232017, 1014841100]  # Fallback

# –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
print(f"üîß –†–µ–∂–∏–º: {'Cloud Functions' if IS_CLOUD_FUNCTIONS else '–õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞'}")
print(f"üîë –¢–æ–∫–µ–Ω: {'‚úÖ –ù–∞–π–¥–µ–Ω' if TOKEN else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}")
print(f"üóÑÔ∏è  YDB: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞' if YDB_ENDPOINT and YDB_DATABASE else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞'}")

# States –¥–ª—è ConversationHandler (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
SEARCH, TASKS_MENU, SCHEDULE_MENU, REPORTS_MENU, NOTIF_MENU, PROFILE = range(6)
ADMIN_MENU, CHANGE_ROLE, DELETE_USER = range(7, 10)
USER_SEARCH = 11

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
SCHEDULE_MENU_ADMIN, SCHEDULE_VIEW, SCHEDULE_ADD, SCHEDULE_EDIT, SCHEDULE_DELETE = range(12, 17)
ADD_SCHEDULE_TYPE, ADD_SCHEDULE_USER, ADD_SCHEDULE_DATE, ADD_SCHEDULE_TIME = range(17, 21)
EDIT_SCHEDULE_SELECT, EDIT_SCHEDULE_FIELD, EDIT_SCHEDULE_VALUE = range(21, 24)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π
CREATE_TASK_TYPE, CREATE_TASK_USER, CREATE_TASK_TIME, CREATE_TASK_DESC, CREATE_TASK_SHELVES = range(50, 55)

# –ù–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
SCHEDULE_SELECT_TYPE, SCHEDULE_SELECT_USER, SCHEDULE_INPUT_DATE, SCHEDULE_INPUT_TIME, SCHEDULE_INPUT_DETAILS, SCHEDULE_CONFIRM = range(100, 106)

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã –¥–ª—è –∑–∞–¥–∞—á
TIME_SLOTS = {
    "–í —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è": "00:00-23:59",
    "09:00-12:00": "09:00-12:00", 
    "12:00-15:00": "12:00-15:00",
    "15:00-18:00": "15:00-18:00",
    "18:00-21:00": "18:00-21:00"
}

# –¢–∏–ø—ã –∑–∞–¥–∞—á
TASK_TYPES = {
    "–û–±–µ–¥—ã": "üçΩÔ∏è",
    "–£–±–æ—Ä–∫–∞": "üßπ", 
    "–ü–µ—Ä–µ—Å—á–µ—Ç—ã": "üî¢"
}

# –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–æ–ª–µ–π
ROLE_EMOJI = {
    "–î–°": "üëë",
    "–ó–î–°": "üéñÔ∏è", 
    "–ö–ª–∞–¥–æ–≤—â–∏–∫": "üë∑"
}

# –°—Ç–∞—Ç—É—Å—ã –∑–∞–¥–∞—á
TASK_STATUS = {
    "–û–∂–∏–¥–∞—é—â–µ–µ": "‚è≥",
    "–í —Ä–∞–±–æ—Ç–µ": "üîÑ", 
    "–í—ã–ø–æ–ª–Ω–µ–Ω–æ": "‚úÖ"
}